<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 매퍼 파일은 일반적으로 table 당 하나 -->
<mapper namespace="orm.mybatis.FinalMapper"> <!-- 패키지 명. 파일이름 -->

	<!--////////// gx관련 - 작성자 : 고석곤 //////////-->
	<insert id="gxinsert" parameterType="fitness.dto.PtregisterDto">
		insert into gx_register values(gx_seq.nextval,#{ct_code},#{gx_exercise},#{gx_day},#{gx_time},#{rg_num})
	</insert>
	<select id="getInfo" resultType="fitness.dto.PtregisterDto" parameterType="int">
		select * from gx_register where gx_num=#{value}
	</select>
	<!--////////// pt관련 - 작성자 : 고석곤 //////////-->
	<select id="regtDetail" parameterType="int" resultType="fitness.dto.RegistrationDto">
		select * from registration where mem_num=#{value}
	</select>
	
	<select id="ptmaxNum" resultType="int">
		select max(nvl(ptr_num,0)) ptr_num from pt_register
	</select>
	
	<insert id="ptrinsert" parameterType="fitness.dto.PtregisterDto">
		insert into pt_register values(ptr_seq.nextval,#{tr_num},#{rg_num},#{ptr_initdate},#{ptr_time},#{ptr_count},#{ct_code},'승인대기')
	</insert>
	<select id="ptrinfo" resultType="fitness.dto.PtregisterDto" parameterType="int">
		select * from pt_register where ptr_num=#{value}
	</select>
	
	<select id="ptrlistAll" parameterType="hashmap" resultType="fitness.dto.PtregisterDto">
		select aa.*,m.mem_name from 
		(select pt.*,rg.mem_num from pt_register pt, registration rg 
			where pt.rg_num=rg.rg_num and pt.tr_num=#{tr_num}
		)aa,member m
		where aa.mem_num=m.mem_num
	</select>
	
	<select id="ptrmemlistAll" parameterType="hashmap" resultType="fitness.dto.ptrMemDto">
		select ptr_initdate, ptr_time, ptr_count, ptr_ok, mem_name, stf_name from 
			(select aa.*,pt.ptr_initdate, pt.ptr_time, pt.ptr_count, pt.ptr_ok,  pt.tr_num  from pt_register pt,
			    (select mem_name, rg_num from member m, registration r where m.mem_num=r.mem_num and m.mem_num=#{mem_num})aa
			    where pt.rg_num=aa.rg_num)bb, 
			(select tr_num, stf_name from trainer tr, staff st where tr.stf_num=st.stf_num)tt
		where tt.tr_num=bb.tr_num
	</select>
	
	<update id="ptrResult" parameterType="fitness.dto.PtregisterDto">
		update pt_register set ptr_ok=#{ptr_ok} where ptr_num=#{ptr_num}
	</update>

<!--////////// mem_att 관련 - 작성자 : 유예진 //////////-->
	<insert id="mattinsert" parameterType="fitness.dto.Mem_attDto">
		insert into mem_att values(matt_seq.nextval, sysdate, #{mem_num}, #{ct_code} )	
	</insert>
	<select id="mattlist" parameterType="hashmap" resultType="fitness.dto.Mem_attDto">
		select * from mem_att order by matt_date desc
	</select>
	
<!--////////// stf_att 관련 - 작성자 : 유예진 //////////-->
	<insert id="sattinsert" parameterType="fitness.dto.Stf_attDto">
		insert into stf_att values(satt_seq.nextval, sysdate, #{stf_num}, #{ct_code} )	
	</insert>
	<select id="sattlist" parameterType="hashmap" resultType="fitness.dto.Stf_attDto">
		select * from stf_att order by satt_date desc
	</select>


	
	
<!--////////// trainer 관련 - 작성자 : 유예진 //////////-->
	<insert id="trinsert" parameterType="fitness.dto.TrainerDto">
		insert into trainer values(tr_seq.nextval, #{stf_num}, #{tr_career}, #{tr_intro} )
	</insert>
	<update id="trupdate" parameterType="fitness.dto.TrainerDto" >
		update trainer set stf_num=#{stf_num}, tr_career=#{tr_career}, tr_intro=#{tr_intro} where tr_num=#{tr_num}
	</update>
	<select id="trlist" resultType="fitness.dto.TrainerDto" parameterType="hashmap">
		select * from( select  tr.*,rownum rnum from
			(select * from trainer	)tr
		)
		<![CDATA[where rnum>=#{startRow} and rnum<=#{endRow}]]>
		
	</select>
	<select id="trdetail" parameterType="int" resultType="fitness.dto.TrainerDto">
		select * from trainer where tr_num=#{value}
	</select>
		<select id="trdetail2" parameterType="int" resultType="fitness.dto.TrainerDto">
		select * from trainer where stf_num=#{value}
	</select>
	<delete id="trdelete" parameterType="int">
		delete from trainer where tr_num=#{value}
	</delete>
	
	<select id="getTrCount" resultType="int"  parameterType="hashmap">
		select count(tr_num) cnt from trainer
	
	</select>
	

<!--////////// department 관련 - 작성자 : 유예진 //////////-->
	<insert id="deptinsert" parameterType="fitness.dto.DepartmentDto">
		insert into department values(#{dept_code},#{dept_name})
	</insert>
	<select id="deptlist" resultType="fitness.dto.DepartmentDto">
		select * from department
	</select>
	<select id="deptdetail" resultType="fitness.dto.DepartmentDto" parameterType="int">
		select * from department where dept_code=#{value}	
	</select>
	<update id="deptupdate" parameterType="fitness.dto.DepartmentDto">
		update department set dept_name=#{dept_name} where dept_code=#{dept_code} 
	</update>
	<delete id="deptdelete" parameterType="int">
		delete department where dept_code=#{value}
	</delete>
<!--////////// position 관련 - 작성자 : 유예진 //////////-->
	<insert id="posinsert" parameterType="fitness.dto.PositionDto">
		insert into position values(#{pos_code},#{pos_name},#{dept_code})
	</insert>
	<select id="poslist" resultType="fitness.dto.PositionDto">
		select * from position
	</select>
	<select id="posdetail" resultType="fitness.dto.PositionDto" parameterType="String">
		select * from position where pos_code=#{value}	
	</select>
	<update id="posupdate" parameterType="fitness.dto.PositionDto">
		update position set pos_name=#{pos_name}, dept_code=#{dept_code} where pos_code=#{pos_code}
	</update>
	<delete id="posdelete" parameterType="String">
		delete from position where pos_code=#{value}
	</delete>
<!--////////// center 관련 - 작성자 : 유예진 //////////-->
	<insert id="ctinsert" parameterType="fitness.dto.CenterDto">
		insert into center values(ct_seq.nextval, #{ct_name}, #{ct_tel}, #{ct_addr}, #{ct_intro})
	</insert>
	<select id="ctlist" resultType="fitness.dto.CenterDto">
		select * from center
	</select>
	<select id="ctdetail" resultType="fitness.dto.CenterDto" parameterType="String" >
		select * from center where ct_code=#{value}
	</select>
	<update id="ctupdate" parameterType="fitness.dto.CenterDto">
		update center set ct_name=#{ct_name}, ct_tel=#{ct_tel},ct_addr= #{ct_addr}, ct_intro=#{ct_intro} where ct_code=#{ct_code}
	</update>
	<delete id="ctdelete" parameterType="int" >
		delete center where ct_code=#{value}
	</delete>


<!--////////// staff 관련 - 작성자 : 유예진 //////////-->
	<insert id="stfinsert" parameterType="fitness.dto.StaffDto">
		 insert into staff values(staff_seq.nextval, #{stf_name}, #{stf_phone}, sysdate , #{stf_picture}, #{pos_code}, #{ct_code})
	</insert>
	<select id="stflist" resultType="fitness.dto.StaffDto" parameterType="hashmap">
		select * from( select  stf.*,rownum rnum from
			(select * from staff	
			<where>
			<if test="ct_code!=null">
				ct_code like '%'||#{ct_code}||'%'
			</if>
			<if test="pos_code!=null">
				and pos_code like '%' || #{pos_code}|| '%'
			</if>
			<if test="stf_name!=null">
				and stf_name like '%' || #{keyword}|| '%'
			</if>
			<if test="stf_phone!=null">
				and stf_phone like '%' || #{keyword}|| '%'
			</if>
			
		</where>
			)stf
		)
		<![CDATA[where rnum>=#{startRow} and rnum<=#{endRow}]]>
	</select>
	<select id="getStfCount" resultType="int">
		select count(stf_num) cnt from staff
		<where>
			<if test="ct_code!=null">
				ct_code like '%'||#{ct_code}||'%'
			</if>
			<if test="pos_code!=null">
				and pos_code like '%'||#{pos_code}||'%'
			</if>
			<if test="stf_name!=null">
				and stf_name like '%'||#{keyword}||'%'
			</if>
			<if test="stf_phone!=null">
				and stf_phone like '%'||#{keyword}||'%'
			</if>
			
		</where>
	</select>
	<select id="stfdetail" parameterType="int" resultType="fitness.dto.StaffDto">
		select * from staff where stf_num=#{value}
	</select>
	<update id="stfupdate" parameterType="fitness.dto.StaffDto">
		update staff set stf_name= #{stf_name}, stf_phone= #{stf_phone}, stf_picture= #{stf_picture}, 
										pos_code=#{pos_code}, ct_code= #{ct_code} where stf_num=#{stf_num}
	</update>
	<delete id="stfdelete" parameterType="int">
		delete from staff where stf_num=#{value}
	</delete>

	

<!--////////// registraion 관련(수강등록-프로그램등록) - 작성자:이성진 //////////-->
	<!-- 회원 수강등록(프로그램) insert 
		1. 수강등록하고자 하는 회원번호를 검색한다.
		2. 뽑아온 번호와 기타정보들을 insert 한다.
	-->
	<!-- 1.(table명: member)회원번호검색 -->
	
	
	<select id="searchMemNum" parameterType="hashmap" resultType="fitness.dto.MemberDto">
		select * from member
		<if test="keyword!=null">
			where mem_num= #{keyword}
		</if>
	</select>

	<!-- 2.(table명: programprice) insert 할 때 selectBox에 넣을 (단과과목)프로그램 이름 뽑아오기 -->
	<!-- 2.insert 할 때 selectBox에 넣을 (헬스&GX등록)프로그램 이름 뽑아오기 -->
	<select id="programName" parameterType="hashmap" resultType="fitness.dto.ProgramPriceDto">
		select * from programprice
	</select>
	<!-- 2. (헬스&GX)프로그램 선택하면, input type="text"에 가격 입력하기 -->
	<select id="programPrice" parameterType="String" resultType="fitness.dto.ProgramPriceDto">
		select * from programprice where pro_name=#{value}
	</select> 
	
	<!-- 2.(table명: ptprice) insert 할 때 selectBox에 넣을 (pt)프로그램 이름 뽑아오기 -->
	<select id="ptProgramName" parameterType="hashmap" resultType="fitness.dto.PtPriceDto">
		select * from ptprice
	</select>

	<!-- 2. (pt)프로그램 선택하면, input type="text"에 가격 입력하기 -->
	<select id="ptPrice" parameterType="String" resultType="fitness.dto.PtPriceDto">
		select * from ptprice where pt_name=#{value}
	</select> 
	
<!--////////// 수강등록 관련(회원등록) - 작성자:이성진 //////////-->
	<!-- 1.insert - registration(기본정보등록) table -->
	<insert id="regiInsert" parameterType="fitness.dto.RegistrationDto">
		insert into registration values(regi_seq.nextval,#{mem_num},#{rg_type},#{rg_price},#{locker_price},#{wear_price})
	</insert>
	<!-- (insert)2.registration 테이블의 rg_num의 큰번호 받아오기 -->
	<select id="rgNum" resultType="int">
		select max(nvl(rg_num,0)) rg_num from registration
	</select>

	<!-- 1.insert - prosign(단과과목등록) table -->
	<insert id="prosignInsert" parameterType="fitness.dto.ProsignDto">
		insert into prosign values(prosign_seq.nextval,#{rg_num},#{mem_num},#{pro_name},#{pro_code})
	</insert>
	<!-- 1.insert - ptsign(pt등록) table -->
	<insert id="ptsignInsert" parameterType="fitness.dto.PtsignDto">
		insert into ptsign values(ptsign_seq.nextval,#{rg_num},#{mem_num},#{pt_code},#{pt_name},#{ptr_count})
	</insert>
	
	<!-- 1.insert - properiod(단과-운동기간등록) table -->
	<insert id="properiodInsert" parameterType="fitness.dto.ProperiodDto">
		insert into properiod values(properiod_seq.nextval,#{rg_num},#{mem_num},#{pro_signmonth},sysdate,add_months(sysdate,${pro_signmonth}))
	</insert>
	<!-- 1.insert - ptperiod(pt-운동기간등록) table -->
	<insert id="ptperiodInsert" parameterType="fitness.dto.PtperiodDto">
		insert into ptperiod values(ptperiod_seq.nextval,#{rg_num},#{mem_num},#{pt_signmonth},sysdate, add_months(sysdate ,${pt_signmonth}))
	</insert>
	
	<!-- 2.select - registration(기본정보등록) table -->
	<!-- 전체 글의 갯수 -->
	<select id="getCountRegi" resultType="int">
		select count(rg_num) cnt from registration
	</select>
	<!-- 전체목록보기 -->
	<select id="regiListAll" parameterType="hashmap" resultType="fitness.dto.RegistrationDto">
		select * from(
			select aa.*,rownum rnum from(
				select * from registration
				order by rg_num desc
			)aa
		)
		<![CDATA[where rnum>=#{startRow} and rnum<=#{endRow}]]>
	</select>
	<!-- 회원번호에 따른 과목유형(rg_type)별 전체목록보기 -->
	<!-- 단과과목 등록정보뽑아오기-->
	<select id="regiSimpleListOne" parameterType="hashmap" resultType="fitness.dto.ProsignDto">
		
			select * from prosign s, properiod p 
			where s.rg_num=p.rg_num
		and s.mem_num=#{mem_num} and s.rg_num=#{rg_num}
	</select>
	<!-- pt과목 등록정보뽑아오기-->
	<select id="regiPTListOne" parameterType="hashmap" resultType="fitness.dto.PtsignDto">
			select * from ptsign s, ptperiod p
			where s.rg_num=p.rg_num
		and s.mem_num=#{mem_num} and s.rg_num=#{rg_num}
	</select>

	
	<!-- 3.update하기 위한 getInfo -->
	<select id="regiGetInfo" parameterType="hashmap" resultType="fitness.dto.RegistrationDto">
		select * from registration where mem_num=#{mem_num} and rg_num=#{rg_num}
	</select>

	<!-- 4.delete 수강정보 -registration(기본정보등록) table -->
	<delete id="regiDel" parameterType="int">
		delete from registration where rg_num=#{rg_num}
	</delete>
	<!-- 4.delete 수강정보 :prosign(단과과목등록) table -->
	<delete id="prosignDel" parameterType="int" >
		delete from prosign where rg_num=#{rg_num}
	</delete>
	<!-- 4.delete 수강정보 :ptsign(pt등록) table -->
	<delete id="ptsignDel" parameterType="int">
		delete from ptsign where rg_num=#{rg_num}
	</delete>
	<!-- 4.delete 수강정보 :properiod(단과-운동기간등록) table-->
	<delete id="properiodDel" parameterType="int">
		delete from properiod where rg_num=#{rg_num}
	</delete> 
	<!-- 4.delete 수강정보 :ptperiod(pt-운동기간등록) table -->
	<delete id="ptperiodDel" parameterType="int">
		delete from ptperiod where rg_num=#{rg_num}
	</delete>
	
<!--////////// member 관련(회원등록) - 작성자:이성진 //////////-->
	<!-- 회원기본정보등록 insert -->
	<insert id="meminsert" parameterType="fitness.dto.MemberDto">
		 insert into member values(mem_seq.nextval,#{mem_name},#{mem_phone},#{mem_addr},#{mem_email},#{mem_age},#{mem_gen},#{mem_birth},sysdate,#{mem_picture},#{ct_code})
	</insert>
	<!-- member페이징처리(전체글의 갯수) -->
	<select id="getMemCount" resultType="int">
		select count(mem_num) cnt from member
	</select>
	<!-- 전체목록보기 listAll -->
	<select id="memSelectAll" resultType="fitness.dto.MemberDto">
		select * from(
			select  aa.*,rownum rnum from
			(
				select * from member
				order by mem_name asc
			)aa
		)
		<![CDATA[where rnum>=#{startRow} and rnum<=#{endRow}]]>

	</select>
	<!-- 한명상세보기 ListOne -->
	<select id="memListOne" parameterType="int" resultType="fitness.dto.MemberDto">
		select * from member where mem_num=#{value}
	</select>
	
	<!-- 회원삭제 memDelete -->
	<delete id="memDelete" parameterType="int">
		delete from member where mem_num=#{value}
	</delete>
	
	<!-- 회원수정 memUpdate -->
	<update id="memUpdate" parameterType="fitness.dto.MemberDto">
		update member set mem_name= #{mem_name}, mem_phone= #{mem_phone}, mem_addr= #{mem_addr}, mem_email= #{mem_email},  
											     mem_age=#{mem_age}, mem_gen=#{mem_gen}, mem_birth=#{mem_birth}, 
												 mem_picture= #{mem_picture},  ct_code= #{ct_code} where mem_num=#{mem_num}
	</update>
	<!-- 회원검색 memSearchList -->
	<select id="memSearchList" resultType="fitness.dto.MemberDto">
		select * from member
		<if test="memSearch!=null">
			where ${memSearch} like '%' || #{keyword} || '%'
		</if>
	</select>
	
 
	
	<!--////////// notice 공지사항  - 작성자 : 김재원 //////////-->
	
	<insert id="Nocinsert" parameterType="fitness.dto.NoticeDto">
		insert into notice values(notice_seq.nextval,#{stf_num},#{nt_title},#{nt_content},sysdate,#{nt_hit})
	</insert>
	
	<select id="getNocCount" parameterType="hashmap"  resultType="int">
		select nvl(count(nt_num),0) from 
		(select aa.*,rownum rnum from
	    (select n.*,s.stf_name 
	    from notice n,staff s
	    where n.stf_num=s.stf_num
		<if test="nt_num!=null">
		    OR nt_num like '%'||#{nt_num}||'%'
		</if>
		<if test="title!=null">
		    OR nt_title like '%'||#{keyword}||'%'
		</if>
			<if test="writer!=null">
		    OR stf_name like '%'||#{keyword}||'%'
		</if>
		    order by n.nt_num desc)aa
	  	)
	</select>	
	
	<select id="NocSelectAll" parameterType="hashmap" resultType="fitness.dto.NoticeDto">
		select * from(
	    select aa.*,rownum rnum from
	    (select n.*,s.stf_name 
	    from notice n,staff s
	    where n.stf_num=s.stf_num  
		<if test="title!=null">   
		    and nt_title like '%'||#{keyword}||'%'
		</if>   
		<if test="writer!=null">
		    and stf_name like '%'||#{keyword}||'%'
		</if>
		    order by n.nt_num desc)aa
	  	)
		<![CDATA[where rnum>=#{startRow} and rnum<=#{endRow}]]>
	</select>
	
	<select id="NocListOne" resultType="fitness.dto.NoticeDto" parameterType="int">
		select n.nt_num, n.stf_num, n.nt_title, n.nt_content,n.nt_date,n.nt_hit,s.stf_name
		 from notice n,staff s
	    where n.stf_num=s.stf_num and nt_num=#{value}
	</select>
	
	<delete id="NocDelete" parameterType="int">
		delete from notice where nt_num=#{value}
	</delete>
	
	<update id="NocUpdate" parameterType="fitness.dto.NoticeDto">
		update notice set nt_title=#{nt_title},nt_content=#{nt_content} where nt_num=#{nt_num}
	</update>
	
	<update id="addHit" parameterType="int">
		<![CDATA[
			UPDATE notice set nt_hit = NVL(nt_hit, 0) + 1 where nt_num = #{nt_num}	
		]]>                    
	</update>
<!--////////// 로그인 - 작성자:이성진 //////////-->
   <!-- 회원인경우 -->
   <select id="loginMem" parameterType="hashmap" resultType="hashmap">
      select * from member where mem_name=#{mem_name} and mem_phone=#{mem_phone}
   </select>
   <!-- 직원인경우 -->
   <select id="loginAdmin" parameterType="hashmap" resultType="hashmap">
      select * from staff where stf_name=#{stf_name} and stf_phone=#{stf_phone}
   </select>
<!--////////// QnA board(답변형게시판) - 작성자:이성진 //////////-->
	<!-- insert -->
	<insert id="qnaInsert" parameterType="fitness.dto.QnaboardDto">
		insert into qnaboard values(#{qna_num},#{mem_num},#{qna_title},#{qna_content},sysdate,0,#{qna_ref},#{qna_lev},#{qna_step})
	</insert>
	<!-- 가장 큰 글번호 얻어오기 -->
	<select id="qnaMaxNum" resultType="int">
		select NVL(max(qna_num),0) from qnaboard
	</select>
	<!-- 답글인경우 -->
	<update id="qnaRe" parameterType="fitness.dto.QnaboardDto">
		update qnaboard set qna_step=#{qna_step}+1 where qna_ref=#{qna_ref} and qna_step>#{qna_step}
	</update>
	
	<!-- 조회수증가 -->
	<update id="qnaAddHit" parameterType="int">
		update qnaboard
		set qna_hit=qna_hit+1
		where qna_num=#{value}
	</update>
	<!-- 전체글의 갯수 -->
	<select id="qnaCount" resultType="int">
		select count(qna_num) cnt from qnaboard
	</select>
	<!-- 전체목록보기(selectAll) -->
	<select id="qnaListAll" parameterType="hashmap" resultType="fitness.dto.QnaboardDto">
		select * from(
			select aa.*,rownum rnum from(
				select * from qnaboard
				order by qna_ref desc, qna_step asc
			)aa
		)<![CDATA[where rnum>=#{startRow} and rnum<=#{endRow}]]>
	</select>
	<!-- 글읽기(selectOne) -->
	<select id="qnaListOne" parameterType="int" resultType="fitness.dto.QnaboardDto">
		select * from qnaboard where qna_num=#{value}
	</select>
	<!-- 수정하기 -->
	<update id="qnaUpdate" parameterType="fitness.dto.QnaboardDto">
		update qnaboard
		set qna_title=#{qna_title}, qna_content=#{qna_content}
		where qna_num=#{qna_num}
	</update>
	<!-- 삭제하기 -->
	<delete id="qnaDelete" parameterType="int">
		delete from qnaboard where qna_num=${value}
	</delete>
	<!-- qna글 검색하기 -->
	<select id="qnaSearch" parameterType="hashmap" resultType="fitness.dto.QnaboardDto">
		select * from qnaboard
			<if test="field!=null">
				where ${field} like '%' || #{keyword} || '%'
			</if>
				order by qna_num desc
	</select>
<!--////////// Event board(이벤트 등록하기)(table: event) - 작성자:이성진 //////////-->
	<!-- insert -->
	<insert id="eventInsert" parameterType="fitness.dto.EventDto">
		insert into event values(event_seq.nextval,#{ev_title},#{ev_picture},#{ev_content},#{stf_num},sysdate)
	</insert>
	<!-- selectAll(selectNew 최신글 페이지)(전체보기) -->
	<select id="eventSelectAll" resultType="fitness.dto.EventDto">
		select * from(
			select aa.*,rownum rnum from(
				select * from event
				order by ev_num desc
			)aa
		)<![CDATA[where rnum>=#{startRow} and rnum<=#{endRow}]]>
	</select>
	<!-- 페이징처리 (selectNew 최신글 페이지)-->
	<select id="getEventCount" resultType="int">
		select count(ev_num) cnt from event
	</select>
	<!-- selectAll(선택한 글 : selectListOne 페이지)(전체보기) -->
	<select id="eventSelectAll2" resultType="fitness.dto.EventDto">
		select * from(
			select aa.*,rownum rnum from(
				select * from event
				order by ev_num desc
			)aa
		)<![CDATA[where rnum>=#{startRow} and rnum<=#{endRow}]]>
	</select>
	<!-- 페이징처리(선택한 글 : selectListOne 페이지) -->
	<select id="getEventCount2" resultType="int">
		select count(ev_num) cnt from event
	</select>
	<!-- selectNew(최신글 상세보기) -->
	<select id="eventSelectNew" resultType="fitness.dto.EventDto">
		select * from event where ev_num=(
		select NVL(max(ev_num),0) ev_num from event
		)
	</select>
	<!-- selectListOne(선택한 글 상세보기) -->
	<select id="eventListOne" parameterType="int" resultType="fitness.dto.EventDto">
		select * from event where ev_num=#{value}
	</select>
	<!-- 삭제하기 -->
	<delete id="eventDel" parameterType="int">
		delete from event where ev_num=#{value}
	</delete>
	<!-- 수정하기 -->
	<update id="eventUpdate" parameterType="fitness.dto.EventDto">
		update event 
		set ev_title=#{ev_title}, ev_content=#{ev_content}, ev_picture=#{ev_picture} 
		where ev_num=#{ev_num}
	</update>
<!--////////// Event board(댓글달기)(table: EventComments) - 작성자:이성진 //////////-->
	
	
	
<!--////////// Event board(댓글 출력하기) - 작성자:이성진 //////////-->
	<!-- select한 댓글의 내용이 CommentsListDto의 commlist에 자동으로 들어가는 것이 아니기 때문에  들어가게 해준다.
	resultMap : 컬럼하고 해당 DTO하고 이름이 다를경우,,
		resultMap을 이용해서
		private List<EventCommentsDto> commlist;에 넣어준다.
	-->
	<resultMap type="fitness.dto.CommentsListDto" id="commlist">
		<result property="ev_num" column="ev_num"/>
		<result property="ev_title" column="ev_title"/>
		<result property="ev_picture" column="ev_picture"/>
		<result property="ev_content" column="ev_content"/>
		<result property="stf_num" column="stf_num"/>
		
		<collection property="comments" ofType="fitness.dto.EventCommentsDto">
			<result property="comm_num" column="comm_num"/>
			<result property="ev_num" column="ev_num"/>
			<result property="mem_num" column="mem_num"/>
			<result property="comments" column="comments"/>
			
		</collection>
	</resultMap>
	<select id="commList" resultMap="commlist">
		select * from event e, eventcomments c
		where e.ev_num=c.ev_num
	</select>
</mapper>