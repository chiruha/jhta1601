<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 매퍼 파일은 일반적으로 table 당 하나 -->
<mapper namespace="orm.mybatis.FinalMapper"> <!-- 패키지 명. 파일이름 -->
	
	<!--////////// pt관련 - 작성자 : 고석곤 //////////-->
	<insert id="ptrinsert" parameterType="fitness.dto.RegistrationDto">
		insert into pt_register values(ptr_seq.nextval,#{tr_num},#{rg_num},#{ptr_initdate},#{ptr_time},#{ptr_count},#{ct_code},'승인대기')
	</insert>
	<select id="ptrinfo" resultType="fitness.dto.RegistrationDto" parameterType="int">
		select * from pt_register where ptr_num=#{value}
	</select>

<!--////////// department 관련 - 작성자 : 유예진 //////////-->
	<insert id="deptinsert" parameterType="fitness.dto.DepartmentDto">
		insert into department values(#{dept_code},#{dept_name})
	</insert>
	<select id="deptlist" resultType="fitness.dto.DepartmentDto">
		select * from department
	</select>
	<select id="deptdetail" resultType="fitness.dto.DepartmentDto" parameterType="int">
		select * from department where dept_code=#{value}	
	</select>
	<update id="deptupdate" parameterType="fitness.dto.DepartmentDto">
		update department set dept_name=#{dept_name} where dept_code=#{dept_code} 
	</update>
	<delete id="deptdelete" parameterType="int">
		delete department where dept_code=#{value}
	</delete>
<!--////////// position 관련 - 작성자 : 유예진 //////////-->
	<insert id="posinsert" parameterType="fitness.dto.PositionDto">
		insert into position values(#{pos_code},#{pos_name},#{dept_code})
	</insert>
	<select id="poslist" resultType="fitness.dto.PositionDto">
		select * from position
	</select>
	<select id="posdetail" resultType="fitness.dto.PositionDto" parameterType="String">
		select * from position where pos_code=#{value}	
	</select>
	<update id="posupdate" parameterType="fitness.dto.PositionDto">
		update position set pos_name=#{pos_name}, dept_code=#{dept_code} where pos_code=#{pos_code}
	</update>
	<delete id="posdelete" parameterType="String">
		delete from position where pos_code=#{value}
	</delete>
<!--////////// center 관련 - 작성자 : 유예진 //////////-->
	<insert id="ctinsert" parameterType="fitness.dto.CenterDto">
		insert into center values(ct_seq.nextval, #{ct_name}, #{ct_tel}, #{ct_addr}, #{ct_intro})
	</insert>
	<select id="ctlist" resultType="fitness.dto.CenterDto">
		select * from center
	</select>
	<select id="ctdetail" resultType="fitness.dto.CenterDto" parameterType="String" >
		select * from center where ct_code=#{value}
	</select>
	<update id="ctupdate" parameterType="fitness.dto.CenterDto">
		update center set ct_name=#{ct_name}, ct_tel=#{ct_tel},ct_addr= #{ct_addr}, ct_intro=#{ct_intro} where ct_code=#{ct_code}
	</update>
	<delete id="ctdelete" parameterType="int" >
		delete center where ct_code=#{value}
	</delete>


<!--////////// staff 관련 - 작성자 : 유예진 //////////-->
	<insert id="stfinsert" parameterType="fitness.dto.StaffDto">
		 insert into staff values(staff_seq.nextval, #{stf_name}, #{stf_phone}, sysdate , #{stf_picture}, #{pos_code}, #{ct_code})
	</insert>
	<select id="stflist" resultType="fitness.dto.StaffDto">
		select * from( select  aa.*,rownum rnum from
			(select * from staff	)aa
		)
		<![CDATA[where rnum>=#{startRow} and rnum<=#{endRow}]]>

	</select>
	<select id="stfdetail" parameterType="int" resultType="fitness.dto.StaffDto">
		select * from staff where stf_num=#{value}
	</select>
	<update id="stfupdate" parameterType="fitness.dto.StaffDto">
		update staff set stf_name= #{stf_name}, stf_phone= #{stf_phone}, stf_picture= #{stf_picture}, 
										pos_code=#{pos_code}, ct_code= #{ct_code} where stf_num=#{stf_num}
	</update>
	<delete id="stfdelete" parameterType="int">
		delete from staff where stf_num=#{value}
	</delete>

	<select id="getStfCount" resultType="int">
		select count(stf_num) cnt from staff
	</select>

<!--////////// registraion 관련(수강등록-프로그램등록) - 작성자:이성진 //////////-->
	<!-- 회원 수강등록(프로그램) insert 
		1. 수강등록하고자 하는 회원번호를 검색한다.
		2. 뽑아온 번호와 기타정보들을 insert 한다.
	-->
	<!-- 1.(table명: member)회원번호검색 -->

	<select id="searchMemNum" parameterType="fitness.dto.MemberDto">
		select * from member
		<if test="memNum!=null">
			where ${memNum} like '%' || #{keyword} || '%'
		</if>
	</select>


	<!-- 2.(table명: programprice) insert 할 때 selectBox에 넣을 (단과과목)프로그램 이름 뽑아오기 -->


	<!-- 2.insert 할 때 selectBox에 넣을 프로그램 이름 뽑아오기 -->

	<select id="programName" parameterType="hashmap" resultType="fitness.dto.ProgramPriceDto">
		select * from programprice
	</select>
	<!-- 2.(table명: ptprice) insert 할 때 selectBox에 넣을 (pt)프로그램 이름 뽑아오기 -->
	<select id="ptProgramName" parameterType="hashmap" resultType="fitness.dto.PtPriceDto">
		select * from ptprice
	</select>


<!--////////// member 관련(회원등록) - 작성자:이성진 //////////-->
	<!-- 회원기본정보등록 insert -->
	<insert id="meminsert" parameterType="fitness.dto.MemberDto">
		 insert into member values(mem_seq.nextval,#{mem_name},#{mem_phone},#{mem_addr},#{mem_email},#{mem_age},#{mem_gen},#{mem_birth},sysdate,#{mem_picture},#{ct_code})
	</insert>
	<!-- member페이징처리(전체글의 갯수) -->
	<select id="getMemCount" resultType="int">
		select count(mem_num) cnt from member
	</select>
	<!-- 전체목록보기 listAll -->
	<select id="memSelectAll" resultType="fitness.dto.MemberDto">
		select * from(
			select  aa.*,rownum rnum from
			(
				select * from member
				order by mem_name asc
			)aa
		)
		<![CDATA[where rnum>=#{startRow} and rnum<=#{endRow}]]>

	</select>
	<!-- 한명상세보기 ListOne -->
	<select id="memListOne" parameterType="int" resultType="fitness.dto.MemberDto">
		select * from member where mem_num=#{value}
	</select>
	
	<!-- 회원삭제 memDelete -->
	<delete id="memDelete" parameterType="int">
		delete from member where mem_num=#{value}
	</delete>
	
	<!-- 회원수정 memUpdate -->
	<update id="memUpdate" parameterType="fitness.dto.MemberDto">
		update member set mem_name= #{mem_name}, mem_phone= #{mem_phone}, mem_addr= #{mem_addr}, mem_email= #{mem_email},  
											     mem_age=#{mem_age}, mem_gen=#{mem_gen}, mem_birth=#{mem_birth}, 
												 mem_picture= #{mem_picture},  ct_code= #{ct_code} where mem_num=#{mem_num}
	</update>
	<!-- 회원검색 memSearchList -->
	<select id="memSearchList" resultType="fitness.dto.MemberDto">
		select * from member
		<if test="memSearch!=null">
			where ${memSearch} like '%' || #{keyword} || '%'
		</if>
	</select>
	
<!--////////// notice 관련  김재원 작성 //////////-->	
	<insert id="nocinsert" parameterType="fitness.dto.NoticeDto">
		insert into notice values(notice_seq.nextval,#{stf_num},#{nt_title},#{nt_content},sysdate,#{nt_hit})
	</insert>
	
	<delete id="nocdelete" parameterType="int">
		delete from notice where nt_num=#{value}
	</delete>
	
	<update id="nocupdate" parameterType="fitness.dto.NoticeDto">
		update notice set nt_title=#{nt_title},nt_content=#{nt_content} where nt_num=#{nt_num}
	</update>

	<select id="nocdetail" resultType="fitness.dto.NoticeDto" parameterType="int">
		select * from notice where nt_num=#{value}
	</select>
	
	<select id="nocgetCount" resultType="int">
		select nvl(count(nt_num),0) from notice
	</select>
	
	
	<select id="nocList" parameterType="hashmap" resultType="fitness.dto.NoticeDto">
		select * from(
		select aa.*,rownum rnum from
		(select * from notice <where>
			<if test="nt_title!=null">
				or title like '%'||#{keyword}||'%'
			</if>
			<if test="nt_content!=null">
				or content like '%'||#{keyword}||'%'
			</if>			
		</where>order by nt_num desc)aa
  		) <![CDATA[ where rnum>=#{startRow} and rnum<=#{endRow} ]]>
 		
		
	</select>
</mapper>